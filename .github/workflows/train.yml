# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Train model

on:
  workflow_dispatch:
    inputs:
      debug_training:
        description: "Run a debug training job with a subset of dataset"
        required: true
        default: false
        type: boolean

permissions:
  contents: read

jobs:
  train:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: postgres  # required env variable for the postgres docker image
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        lfs: true
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install .
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-db.txt ]; then pip install -r requirements-db.txt; fi
        if [ -f requirements-mlflow.txt ]; then pip install -r requirements-mlflow.txt; fi
    - name: Preprocess data
      run: |
        echo 'Load data into database'
        python scripts/database/init_db.py -s scripts/database/schema.sql
        python scripts/database/populate_db.py -c configs/data_config.yaml -d $DEBUG_TRAINING
        
        echo 'Detect comment language'
        python scripts/database/populate_comment_language.py
        
        echo 'Create train and validation Datasets'
        python scripts/data/preprocess_data.py -c configs/data_config.yaml
      env:
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_NAME: bgg
        DB_HOST: localhost
        DB_PORT: 5432
        DEBUG_TRAINING: ${{ inputs.debug_training }}
    - name: Train model
      env:
        MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }} # from GitHub secrets
        MLFLOW_EXPERIMENT_NAME: "github-actions-bgg-comment-score-predictor"
      run: |
        python src/bgg_playground/modeling/train.py --config configs/model_config.yaml
